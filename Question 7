import cv2 as cv
import numpy as np
from matplotlib import pyplot as pyplot

img=cv.imread('D:\semester 5\Image Processing and Machine Vision\Assignment 1\einstein.png',cv.IMREAD_GRAYSCALE)
array1=np.array([1,-0,-1,2,0,-2,1,0,-1],dtype='float')
kernel1=np.reshape(array1,(3,3))
img_sobel_horizontal=cv.filter2D(img,-1,kernel1)
array2=np.array([-1,-2,-1,0,0,0,1,2,1],dtype='float')
kernel2=np.reshape(array2,(3,3))
img_sobel_vertical=cv.filter2D(img,-1,kernel2)
fig, axes = plt.subplots(1, 3, sharex='all', sharey='all', figsize=(10, 5))

axes[0].imshow(img, cmap='gray')
axes[0].set_title('Original')
axes[0].set_xticks([]), axes[0].set_yticks([])

axes[1].imshow(img_sobel_horizontal, cmap='gray')
axes[1].set_title('Sobel horizontal')
axes[1].set_xticks([]), axes[1].set_yticks([])

axes[2].imshow(img_sobel_vertical, cmap='gray')
axes[2].set_title('Sobel vertical')
axes[2].set_xticks([]), axes[2].set_yticks([])

plt.show()

def sobel(image, kernel):
    assert kernel.shape[0] % 2 == 1 and kernel.shape[1] % 2 == 1
    k_hh, k_hw = math.floor(kernel.shape[0] / 2), math.floor(kernel.shape[1] / 2)
    h, w = image.shape
    
    result = np.zeros(image.shape, 'float')

    for i in range(k_hh, h - k_hh):
        for j in range(k_hw, w - k_hw):
            result[i, j] = np.minimum(np.dot(image[i - k_hh:i + k_hh + 1, j - k_hw:j + k_hw + 1].flatten(), kernel.flatten()),255)

    return result
img=cv.imread('D:\semester 5\Image Processing and Machine Vision\Assignment 1\einstein.png',cv.IMREAD_GRAYSCALE)
kernel=np.array([(1,-0,-1),(2,0,-2),(1,0,-1)],dtype='float')
# kernel=np.array([(1,2,1),(0,0,0),(-1,-2,-1)],dtype='float')
image_trans=(sobel(img,kernel)).astype('uint8')


fig, axes = plt.subplots(1, 2, sharex='all', sharey='all', figsize=(10, 5))

axes[0].imshow(img, cmap='gray')
axes[0].set_title('Original')
axes[0].set_xticks([]), axes[0].set_yticks([])

axes[1].imshow(image_trans, cmap='gray')
axes[1].set_title('Transformed image')
axes[1].set_xticks([]), axes[1].set_yticks([])

plt.show()

img=cv.imread('D:\semester 5\Image Processing and Machine Vision\Assignment 1\einstein.png',cv.IMREAD_GRAYSCALE)
array1=np.array([1,2,1],dtype='float')
kernel1=np.reshape(array1, (3, 1))
array2=np.array([1,0,-1],dtype='float')
kernel2=np.reshape(array2, (1, 3))
imgc=cv.filter2D(img,-1,kernel2)
imgd=cv.filter2D(imgc,-1,kernel1)
fig, axes = plt.subplots(1, 2, sharex='all', sharey='all', figsize=(10, 5))

axes[0].imshow(img, cmap='gray')
axes[0].set_title('Original')
axes[0].set_xticks([]), axes[0].set_yticks([])

axes[1].imshow(imgd, cmap='gray')
axes[1].set_title('Averaging')
axes[1].set_xticks([]), axes[1].set_yticks([])

plt.show()





